/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2011 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			SRAM-SP-HS-HC SRAM Generator
 *           			TSMC CL013G Process
 *      version:		2004Q2V1
 *      comment:		
 *      configuration:	 -instname "HSs13n_512x8" -words 512 -bits 8 -frequency 100 -ring_width 6 -mux 16 -drive 6 -write_mask off -wp_size 8 -redundancy off -redundancy_bits 1 -top_layer met8 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -fuse_encoding encoded -insert_fuse yes -fusebox_name FUSE -rtl_style mux -libname "HSs13n_512x8"
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   HSs13n_512x8
 *      Instance Name:  HSs13n_512x8
 *      Words:          512
 *      Word Width:     8
 *      Mux:            16
 *      Pipeline:       No
 *      Process:        fast
 *      Delays:		min
 *
 *      Creation Date:  2011-09-29 14:31:27Z
 *      Version:        2004Q2V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(HSs13n_512x8) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2011-09-29 14:31:27Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2011 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: -40.000;
	nom_voltage		: 1.320;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 0.500;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.0;
        slew_upper_threshold_pct_fall : 90.0;
        slew_lower_threshold_pct_rise : 10.0;
        slew_upper_threshold_pct_rise : 90.0;
        input_threshold_pct_fall      : 50.0;
        input_threshold_pct_rise      : 50.0;
        output_threshold_pct_fall     : 50.0;
        output_threshold_pct_rise     : 50.0;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(fast) {
		process	 : 1;
		temperature	 : -40.000;
		voltage	 : 1.320;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : fast;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(HSs13n_512x8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(HSs13n_512x8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(HSs13n_512x8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(HSs13n_512x8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (HSs13n_512x8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (HSs13n_512x8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 9;
		bit_from : 8;
		bit_to : 0 ;
		downto : true ;
	}
cell(HSs13n_512x8) {
	area		 : 46559.420;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 9;
		word_width : 8;
	}
	bus(Q)	 {
		bus_type : HSs13n_512x8_DATA;
		direction : output;
		max_capacitance : 0.495;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(HSs13n_512x8_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ( \
			  "0.278, 0.281, 0.284, 0.289, 0.305, 0.331, 0.359", \
			  "0.275, 0.278, 0.282, 0.286, 0.302, 0.328, 0.356", \
			  "0.272, 0.275, 0.278, 0.283, 0.299, 0.325, 0.353", \
			  "0.266, 0.269, 0.272, 0.277, 0.293, 0.319, 0.347", \
			  "0.253, 0.256, 0.259, 0.264, 0.280, 0.306, 0.334", \
			  "0.250, 0.253, 0.256, 0.261, 0.277, 0.303, 0.331", \
			  "0.247, 0.250, 0.253, 0.258, 0.274, 0.300, 0.328" \
			)
			}
			rise_transition(HSs13n_512x8_load_template) {
			index_1 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ("0.035, 0.042, 0.056, 0.077, 0.148, 0.262, 0.387")
			}
			cell_fall(HSs13n_512x8_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ( \
			  "0.278, 0.281, 0.284, 0.289, 0.305, 0.331, 0.359", \
			  "0.275, 0.278, 0.282, 0.286, 0.302, 0.328, 0.356", \
			  "0.272, 0.275, 0.278, 0.283, 0.299, 0.325, 0.353", \
			  "0.266, 0.269, 0.272, 0.277, 0.293, 0.319, 0.347", \
			  "0.253, 0.256, 0.259, 0.264, 0.280, 0.306, 0.334", \
			  "0.250, 0.253, 0.256, 0.261, 0.277, 0.303, 0.331", \
			  "0.247, 0.250, 0.253, 0.258, 0.274, 0.300, 0.328" \
			)
			}
			fall_transition(HSs13n_512x8_load_template) {
			index_1 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ("0.035, 0.037, 0.042, 0.050, 0.075, 0.114, 0.158")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.090
		clock	: true;
		min_pulse_width_low	: 0.338;
		min_pulse_width_high	: 0.055;
		min_period		: 0.617;
		max_transition		: 0.500;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(HSs13n_512x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("27.223, 27.223")
        		}
        		fall_power(HSs13n_512x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(HSs13n_512x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("28.609, 28.609")
			}	
			fall_power(HSs13n_512x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
         internal_power(){
                 when : "CEN";
                 power(HSs13n_512x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.251, 0.251")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.004;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.425, 0.421, 0.417, 0.407, 0.389, 0.384, 0.379", \
			  "0.428, 0.424, 0.419, 0.410, 0.391, 0.387, 0.382", \
			  "0.431, 0.427, 0.422, 0.413, 0.394, 0.390, 0.385", \
			  "0.437, 0.433, 0.429, 0.419, 0.401, 0.396, 0.391", \
			  "0.450, 0.446, 0.441, 0.432, 0.413, 0.409, 0.404", \
			  "0.453, 0.449, 0.445, 0.435, 0.416, 0.412, 0.407", \
			  "0.456, 0.452, 0.448, 0.438, 0.420, 0.415, 0.410" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.414, 0.423, 0.435, 0.459, 0.506, 0.518, 0.529", \
			  "0.416, 0.426, 0.438, 0.461, 0.508, 0.520, 0.532", \
			  "0.420, 0.429, 0.441, 0.464, 0.512, 0.523, 0.535", \
			  "0.426, 0.435, 0.447, 0.471, 0.518, 0.530, 0.542", \
			  "0.439, 0.448, 0.460, 0.483, 0.531, 0.542, 0.554", \
			  "0.442, 0.451, 0.463, 0.487, 0.534, 0.546, 0.557", \
			  "0.445, 0.454, 0.466, 0.490, 0.537, 0.549, 0.561" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
				
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	pin(WEN) {
		direction : input;
		capacitance : 0.007;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.135, 0.135, 0.134, 0.132, 0.129, 0.128, 0.127", \
			  "0.138, 0.137, 0.136, 0.135, 0.131, 0.130, 0.129", \
			  "0.141, 0.140, 0.139, 0.138, 0.134, 0.133, 0.133", \
			  "0.147, 0.147, 0.146, 0.144, 0.141, 0.140, 0.139", \
			  "0.160, 0.159, 0.158, 0.157, 0.153, 0.152, 0.152", \
			  "0.163, 0.162, 0.162, 0.160, 0.156, 0.156, 0.155", \
			  "0.166, 0.166, 0.165, 0.163, 0.160, 0.159, 0.158" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.041, 0.047, 0.054, 0.069, 0.098, 0.106, 0.113", \
			  "0.044, 0.050, 0.057, 0.072, 0.101, 0.108, 0.116", \
			  "0.047, 0.053, 0.060, 0.075, 0.104, 0.111, 0.119", \
			  "0.053, 0.059, 0.067, 0.081, 0.110, 0.118, 0.125", \
			  "0.066, 0.072, 0.079, 0.094, 0.123, 0.130, 0.138", \
			  "0.069, 0.075, 0.082, 0.097, 0.126, 0.134, 0.141", \
			  "0.072, 0.078, 0.085, 0.100, 0.129, 0.137, 0.144" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : HSs13n_512x8_ADDRESS;
		direction : input;
		capacitance : 0.022;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.200, 0.199, 0.197, 0.193, 0.186, 0.184, 0.182", \
			  "0.203, 0.201, 0.199, 0.196, 0.188, 0.186, 0.184", \
			  "0.206, 0.204, 0.203, 0.199, 0.191, 0.189, 0.187", \
			  "0.212, 0.211, 0.209, 0.205, 0.198, 0.196, 0.194", \
			  "0.225, 0.223, 0.222, 0.218, 0.210, 0.208, 0.206", \
			  "0.228, 0.227, 0.225, 0.221, 0.213, 0.212, 0.210", \
			  "0.231, 0.230, 0.228, 0.224, 0.217, 0.215, 0.213" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.115, 0.119, 0.124, 0.134, 0.154, 0.160, 0.165", \
			  "0.117, 0.122, 0.127, 0.137, 0.157, 0.162, 0.167", \
			  "0.121, 0.125, 0.130, 0.140, 0.160, 0.165, 0.170", \
			  "0.127, 0.131, 0.136, 0.146, 0.166, 0.172, 0.177", \
			  "0.140, 0.144, 0.149, 0.159, 0.179, 0.184, 0.189", \
			  "0.143, 0.147, 0.152, 0.162, 0.182, 0.187, 0.192", \
			  "0.146, 0.150, 0.155, 0.165, 0.185, 0.191, 0.196" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.000, 0.000, 0.001, 0.004, 0.012, 0.014, 0.016", \
			  "0.000, 0.000, 0.000, 0.002, 0.009, 0.011, 0.013", \
			  "0.000, 0.000, 0.000, 0.000, 0.006, 0.008, 0.010", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.002, 0.004", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.006, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.003, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(HSs13n_512x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.435, 0.435")
                 }
         }

}
	bus(D)	 {
		bus_type : HSs13n_512x8_DATA;
		direction : input;
		capacitance : 0.001;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.128, 0.124, 0.119, 0.108, 0.087, 0.082, 0.077", \
			  "0.131, 0.127, 0.121, 0.111, 0.090, 0.085, 0.079", \
			  "0.134, 0.130, 0.125, 0.114, 0.093, 0.088, 0.083", \
			  "0.140, 0.136, 0.131, 0.120, 0.099, 0.094, 0.089", \
			  "0.153, 0.149, 0.143, 0.133, 0.112, 0.107, 0.102", \
			  "0.156, 0.152, 0.147, 0.136, 0.115, 0.110, 0.105", \
			  "0.159, 0.155, 0.150, 0.139, 0.118, 0.113, 0.108" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.011, 0.019, 0.028, 0.047, 0.085, 0.094, 0.103", \
			  "0.014, 0.021, 0.031, 0.049, 0.087, 0.096, 0.106", \
			  "0.017, 0.024, 0.034, 0.053, 0.090, 0.100, 0.109", \
			  "0.023, 0.031, 0.040, 0.059, 0.097, 0.106, 0.115", \
			  "0.036, 0.043, 0.053, 0.072, 0.109, 0.119, 0.128", \
			  "0.039, 0.047, 0.056, 0.075, 0.112, 0.122, 0.131", \
			  "0.042, 0.050, 0.059, 0.078, 0.116, 0.125, 0.134" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.017, 0.022, 0.027", \
			  "0.000, 0.000, 0.000, 0.000, 0.014, 0.020, 0.025", \
			  "0.000, 0.000, 0.000, 0.000, 0.011, 0.016, 0.022", \
			  "0.000, 0.000, 0.000, 0.000, 0.005, 0.010, 0.015", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.003", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.450, 0.500");
			values ( \
			  "0.033, 0.026, 0.017, 0.000, 0.000, 0.000, 0.000", \
			  "0.031, 0.023, 0.014, 0.000, 0.000, 0.000, 0.000", \
			  "0.028, 0.020, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.014, 0.005, 0.000, 0.000, 0.000, 0.000", \
			  "0.009, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.006, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
		}	}
	}

	cell_leakage_power : 0.003;
  }
}
