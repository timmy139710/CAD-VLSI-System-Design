/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2011 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			SRAM-SP-HS-HC SRAM Generator
 *           			TSMC CL013G Process
 *      version:		2004Q2V1
 *      comment:		
 *      configuration:	 -instname "HSs13n_512x8" -words 512 -bits 8 -frequency 100 -ring_width 6 -mux 16 -drive 6 -write_mask off -wp_size 8 -redundancy off -redundancy_bits 1 -top_layer met8 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -fuse_encoding encoded -insert_fuse yes -fusebox_name FUSE -rtl_style mux -libname "HSs13n_512x8"
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   HSs13n_512x8
 *      Instance Name:  HSs13n_512x8
 *      Words:          512
 *      Word Width:     8
 *      Mux:            16
 *      Pipeline:       No
 *      Process:        typical
 *      Delays:		max
 *
 *      Creation Date:  2011-09-29 14:31:28Z
 *      Version:        2004Q2V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(HSs13n_512x8) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2011-09-29 14:31:28Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2011 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 25.000;
	nom_voltage		: 1.200;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 0.800;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.0;
        slew_upper_threshold_pct_fall : 90.0;
        slew_lower_threshold_pct_rise : 10.0;
        slew_upper_threshold_pct_rise : 90.0;
        input_threshold_pct_fall      : 50.0;
        input_threshold_pct_rise      : 50.0;
        output_threshold_pct_fall     : 50.0;
        output_threshold_pct_rise     : 50.0;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(typical) {
		process	 : 1;
		temperature	 : 25.000;
		voltage	 : 1.200;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : typical;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(HSs13n_512x8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(HSs13n_512x8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(HSs13n_512x8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(HSs13n_512x8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (HSs13n_512x8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
	type (HSs13n_512x8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 9;
		bit_from : 8;
		bit_to : 0 ;
		downto : true ;
	}
cell(HSs13n_512x8) {
	area		 : 46559.420;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 9;
		word_width : 8;
	}
	bus(Q)	 {
		bus_type : HSs13n_512x8_DATA;
		direction : output;
		max_capacitance : 0.495;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(HSs13n_512x8_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ( \
			  "0.883, 0.888, 0.897, 0.911, 0.959, 1.035, 1.118", \
			  "0.882, 0.887, 0.897, 0.911, 0.958, 1.034, 1.118", \
			  "0.882, 0.886, 0.896, 0.910, 0.958, 1.034, 1.117", \
			  "0.880, 0.885, 0.894, 0.909, 0.956, 1.032, 1.116", \
			  "0.877, 0.882, 0.892, 0.906, 0.953, 1.029, 1.113", \
			  "0.874, 0.879, 0.889, 0.903, 0.951, 1.027, 1.110", \
			  "0.872, 0.876, 0.886, 0.900, 0.948, 1.024, 1.107" \
			)
			}
			rise_transition(HSs13n_512x8_load_template) {
			index_1 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ("0.073, 0.083, 0.102, 0.132, 0.231, 0.389, 0.562")
			}
			cell_fall(HSs13n_512x8_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ( \
			  "0.877, 0.880, 0.884, 0.891, 0.913, 0.948, 0.986", \
			  "0.877, 0.879, 0.883, 0.890, 0.912, 0.947, 0.986", \
			  "0.876, 0.878, 0.883, 0.889, 0.911, 0.946, 0.985", \
			  "0.875, 0.877, 0.881, 0.888, 0.910, 0.945, 0.983", \
			  "0.872, 0.874, 0.878, 0.885, 0.907, 0.942, 0.981", \
			  "0.869, 0.871, 0.876, 0.882, 0.904, 0.939, 0.978", \
			  "0.866, 0.868, 0.873, 0.879, 0.901, 0.936, 0.975" \
			)
			}
			fall_transition(HSs13n_512x8_load_template) {
			index_1 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ("0.048, 0.052, 0.059, 0.069, 0.104, 0.159, 0.219")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.086
		clock	: true;
		min_pulse_width_low	: 0.525;
		min_pulse_width_high	: 0.083;
		min_period		: 0.919;
		max_transition		: 0.800;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(HSs13n_512x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("21.748, 21.748")
        		}
        		fall_power(HSs13n_512x8_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(HSs13n_512x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("23.171, 23.171")
			}	
			fall_power(HSs13n_512x8_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
         internal_power(){
                 when : "CEN";
                 power(HSs13n_512x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.202, 0.202")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.004;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.659, 0.657, 0.654, 0.648, 0.637, 0.626, 0.615", \
			  "0.660, 0.657, 0.655, 0.649, 0.638, 0.627, 0.616", \
			  "0.660, 0.658, 0.655, 0.650, 0.639, 0.627, 0.616", \
			  "0.662, 0.660, 0.657, 0.651, 0.640, 0.629, 0.618", \
			  "0.665, 0.662, 0.660, 0.654, 0.643, 0.632, 0.621", \
			  "0.668, 0.665, 0.662, 0.657, 0.646, 0.635, 0.623", \
			  "0.670, 0.668, 0.665, 0.660, 0.649, 0.638, 0.626" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.656, 0.665, 0.676, 0.698, 0.742, 0.787, 0.831", \
			  "0.657, 0.666, 0.677, 0.699, 0.743, 0.787, 0.831", \
			  "0.658, 0.667, 0.678, 0.700, 0.744, 0.788, 0.832", \
			  "0.659, 0.668, 0.679, 0.701, 0.745, 0.789, 0.833", \
			  "0.662, 0.671, 0.682, 0.704, 0.748, 0.792, 0.836", \
			  "0.665, 0.674, 0.685, 0.707, 0.751, 0.795, 0.839", \
			  "0.668, 0.677, 0.688, 0.710, 0.754, 0.798, 0.842" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
				
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	pin(WEN) {
		direction : input;
		capacitance : 0.007;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.196, 0.197, 0.198, 0.199, 0.203, 0.207, 0.210", \
			  "0.197, 0.197, 0.198, 0.200, 0.204, 0.207, 0.211", \
			  "0.197, 0.198, 0.199, 0.201, 0.204, 0.208, 0.211", \
			  "0.199, 0.200, 0.200, 0.202, 0.206, 0.209, 0.213", \
			  "0.202, 0.202, 0.203, 0.205, 0.209, 0.212, 0.216", \
			  "0.205, 0.205, 0.206, 0.208, 0.211, 0.215, 0.219", \
			  "0.207, 0.208, 0.209, 0.211, 0.214, 0.218, 0.221" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.067, 0.073, 0.079, 0.093, 0.120, 0.147, 0.174", \
			  "0.068, 0.073, 0.080, 0.093, 0.121, 0.148, 0.175", \
			  "0.068, 0.074, 0.081, 0.094, 0.121, 0.149, 0.176", \
			  "0.070, 0.075, 0.082, 0.096, 0.123, 0.150, 0.177", \
			  "0.073, 0.078, 0.085, 0.099, 0.126, 0.153, 0.180", \
			  "0.076, 0.081, 0.088, 0.101, 0.129, 0.156, 0.183", \
			  "0.078, 0.084, 0.091, 0.104, 0.131, 0.159, 0.186" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : HSs13n_512x8_ADDRESS;
		direction : input;
		capacitance : 0.021;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.310, 0.309, 0.309, 0.308, 0.307, 0.305, 0.304", \
			  "0.310, 0.310, 0.309, 0.309, 0.307, 0.306, 0.304", \
			  "0.311, 0.311, 0.310, 0.309, 0.308, 0.306, 0.305", \
			  "0.312, 0.312, 0.312, 0.311, 0.309, 0.308, 0.306", \
			  "0.315, 0.315, 0.314, 0.314, 0.312, 0.311, 0.309", \
			  "0.318, 0.318, 0.317, 0.317, 0.315, 0.314, 0.312", \
			  "0.321, 0.321, 0.320, 0.319, 0.318, 0.317, 0.315" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.176, 0.179, 0.183, 0.191, 0.207, 0.223, 0.239", \
			  "0.176, 0.180, 0.184, 0.192, 0.207, 0.223, 0.239", \
			  "0.177, 0.180, 0.184, 0.192, 0.208, 0.224, 0.240", \
			  "0.179, 0.182, 0.186, 0.194, 0.210, 0.225, 0.241", \
			  "0.181, 0.185, 0.189, 0.197, 0.212, 0.228, 0.244", \
			  "0.184, 0.188, 0.192, 0.199, 0.215, 0.231, 0.247", \
			  "0.187, 0.190, 0.194, 0.202, 0.218, 0.234, 0.250" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.001", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(HSs13n_512x8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.341, 0.341")
                 }
         }

}
	bus(D)	 {
		bus_type : HSs13n_512x8_DATA;
		direction : input;
		capacitance : 0.001;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.197, 0.194, 0.190, 0.183, 0.169, 0.154, 0.139", \
			  "0.198, 0.195, 0.191, 0.184, 0.169, 0.155, 0.140", \
			  "0.198, 0.195, 0.192, 0.184, 0.170, 0.155, 0.141", \
			  "0.200, 0.197, 0.193, 0.186, 0.171, 0.157, 0.142", \
			  "0.203, 0.200, 0.196, 0.189, 0.174, 0.160, 0.145", \
			  "0.206, 0.203, 0.199, 0.192, 0.177, 0.162, 0.148", \
			  "0.208, 0.206, 0.202, 0.195, 0.180, 0.165, 0.151" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.034, 0.040, 0.049, 0.066, 0.099, 0.133, 0.167", \
			  "0.034, 0.041, 0.049, 0.066, 0.100, 0.133, 0.167", \
			  "0.035, 0.042, 0.050, 0.067, 0.101, 0.134, 0.168", \
			  "0.036, 0.043, 0.051, 0.068, 0.102, 0.136, 0.169", \
			  "0.039, 0.046, 0.054, 0.071, 0.105, 0.139, 0.172", \
			  "0.042, 0.049, 0.057, 0.074, 0.108, 0.141, 0.175", \
			  "0.045, 0.052, 0.060, 0.077, 0.111, 0.144, 0.178" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.011, 0.025", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.010, 0.025", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.010, 0.024", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.008, 0.023", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.005, 0.020", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.002, 0.017", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.014" \
			)
			}
			fall_constraint(HSs13n_512x8_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.016, 0.009, 0.001, 0.000, 0.000, 0.000, 0.000", \
			  "0.015, 0.008, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.014, 0.008, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.013, 0.006, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.003, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.007, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.004, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
		}	}
	}

	cell_leakage_power : 0.004;
  }
}
