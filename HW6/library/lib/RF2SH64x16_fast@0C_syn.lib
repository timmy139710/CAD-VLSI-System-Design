/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2005  Artisan Components, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with Artisan Components, Inc. In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			RF-2P-HS Register File Generator
 *           			TSMC CL013G-FSG Process
 *      version:		2004Q2V1
 *      comment:		
 *      configuration:	 -instname RF2SH64x16 -words 64 -bits 16 -frequency 1 -ring_width 8 -mux 2 -drive 4 -write_mask off -wp_size 8 -top_layer met7 -power_type rings -horiz met3 -vert met2 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -libname USERLIB
 *
 *      Synopsys model for Synchronous Dual-Port Register File
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RF2SH64x16
 *      Words:          64
 *      Word Width:     16
 *      Mux:            2
 *      Pipeline:       No
 *      Process:        fast@0C
 *
 *      Creation Date:  2005-11-08 03:08:50Z
 *      Version:        2004Q2V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations:
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 2004Q2V1;
	date			: "2005-11-08 03:08:50Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2005 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
        leakage_power_unit      : "1mW";
	nom_process		: 1;
	nom_temperature		: 0.000;
	nom_voltage		: 1.320;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 0.750;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.0;
        slew_upper_threshold_pct_fall : 90.0;
        slew_lower_threshold_pct_rise : 10.0;
        slew_upper_threshold_pct_rise : 90.0;
        input_threshold_pct_fall      : 50.0;
        input_threshold_pct_rise      : 50.0;
        output_threshold_pct_fall     : 50.0;
        output_threshold_pct_rise     : 50.0;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(fast@0C) {
		process		 : 1;
		temperature	 : 0.000;
		voltage		 : 1.320;
		tree_type	 : balanced_tree;
	}

	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area		 : 1.7;
  		slope		 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RF2SH64x16_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RF2SH64x16_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RF2SH64x16_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RF2SH64x16_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RF2SH64x16_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 16;
		bit_from  : 15;
		bit_to	  : 0 ;
		downto 	  : true ;
	}

	type (RF2SH64x16_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 6;
		bit_from  : 5;
		bit_to    : 0 ;
		downto    : true ;
	}


cell(RF2SH64x16) {
	area		 : 24741.696;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
	interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 6;
		word_width : 16;
	}
	pin(CENB) {
		direction : input;
		capacitance : 0.004;
		timing() {
			related_pin : "CLKB" ;
			timing_type : setup_rising ;
			rise_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.144, 0.141, 0.137, 0.130, 0.114, 0.099, 0.088", \
			  "0.147, 0.144, 0.140, 0.132, 0.117, 0.102, 0.090", \
			  "0.150, 0.147, 0.143, 0.135, 0.120, 0.105, 0.094", \
			  "0.156, 0.153, 0.149, 0.142, 0.127, 0.111, 0.100", \
			  "0.169, 0.166, 0.162, 0.154, 0.139, 0.124, 0.113", \
			  "0.182, 0.179, 0.175, 0.167, 0.152, 0.137, 0.126", \
			  "0.191, 0.188, 0.184, 0.177, 0.162, 0.146, 0.135" \
			)
			}
			fall_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.165, 0.173, 0.184, 0.205, 0.246, 0.288, 0.319", \
			  "0.168, 0.176, 0.186, 0.207, 0.249, 0.290, 0.321", \
			  "0.171, 0.179, 0.190, 0.210, 0.252, 0.293, 0.325", \
			  "0.177, 0.186, 0.196, 0.217, 0.258, 0.300, 0.331", \
			  "0.190, 0.198, 0.209, 0.229, 0.271, 0.313, 0.344", \
			  "0.203, 0.211, 0.221, 0.242, 0.284, 0.325, 0.356", \
			  "0.212, 0.221, 0.231, 0.252, 0.293, 0.335, 0.366" \
			)
		}	}

		timing() {
			related_pin : "CLKB" ;
			timing_type : hold_rising ;
			rise_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}
	bus (AB)  {
		bus_type : RF2SH64x16_ADDRESS;
  	        direction : input;
		capacitance : 0.006;
	        internal_power(){
	    		when : "CENB";
			power(RF2SH64x16_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
	    			values ("0.242, 0.242")
			}	
		}
		timing() {
			related_pin : "CLKB"
			timing_type : setup_rising ;
			rise_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.243, 0.247, 0.253, 0.263, 0.285, 0.307, 0.323", \
			  "0.246, 0.250, 0.255, 0.266, 0.288, 0.309, 0.325", \
			  "0.249, 0.253, 0.258, 0.269, 0.291, 0.312, 0.328", \
			  "0.255, 0.259, 0.265, 0.276, 0.297, 0.319, 0.335", \
			  "0.268, 0.272, 0.278, 0.288, 0.310, 0.331, 0.348", \
			  "0.281, 0.285, 0.290, 0.301, 0.323, 0.344, 0.360", \
			  "0.290, 0.294, 0.300, 0.311, 0.332, 0.354, 0.370" \
			)
			}
			fall_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.237, 0.249, 0.264, 0.294, 0.353, 0.413, 0.457", \
			  "0.240, 0.252, 0.267, 0.296, 0.356, 0.415, 0.460", \
			  "0.243, 0.255, 0.270, 0.300, 0.359, 0.419, 0.463", \
			  "0.249, 0.261, 0.276, 0.306, 0.365, 0.425, 0.470", \
			  "0.262, 0.274, 0.289, 0.319, 0.378, 0.438, 0.482", \
			  "0.275, 0.287, 0.302, 0.331, 0.391, 0.450, 0.495", \
			  "0.284, 0.296, 0.311, 0.341, 0.400, 0.460, 0.505" \
			)
		}	}
		timing() {
			related_pin : "CLKB"
			timing_type : hold_rising ;
			rise_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.021, 0.009, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.007, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.016, 0.004, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.009, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}
	bus (DB)	 {
		bus_type : RF2SH64x16_DATA;
		direction : input;
		capacitance : 0.003;
		memory_write() {
			address : AB;
			clocked_on : "CLKB";
		}
		timing() {
			related_pin : "CLKB"
			timing_type : setup_rising ;
			rise_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.112, 0.109, 0.105, 0.097, 0.082, 0.067, 0.055", \
			  "0.114, 0.111, 0.108, 0.100, 0.084, 0.069, 0.058", \
			  "0.118, 0.115, 0.111, 0.103, 0.088, 0.072, 0.061", \
			  "0.124, 0.121, 0.117, 0.109, 0.094, 0.079, 0.067", \
			  "0.137, 0.134, 0.130, 0.122, 0.107, 0.091, 0.080", \
			  "0.150, 0.146, 0.143, 0.135, 0.120, 0.104, 0.093", \
			  "0.159, 0.156, 0.152, 0.144, 0.129, 0.114, 0.102" \
			)
			}
			fall_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.096, 0.104, 0.114, 0.135, 0.177, 0.219, 0.251", \
			  "0.098, 0.107, 0.117, 0.138, 0.180, 0.222, 0.253", \
			  "0.101, 0.110, 0.120, 0.141, 0.183, 0.225, 0.256", \
			  "0.108, 0.116, 0.127, 0.148, 0.189, 0.231, 0.263", \
			  "0.120, 0.129, 0.139, 0.160, 0.202, 0.244, 0.275", \
			  "0.133, 0.142, 0.152, 0.173, 0.215, 0.257, 0.288", \
			  "0.143, 0.151, 0.162, 0.183, 0.224, 0.266, 0.298" \
			)
		}	}
		timing() {
			related_pin : "CLKB"
			timing_type : hold_rising ;
			rise_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.028, 0.031, 0.035, 0.043, 0.058, 0.074, 0.085", \
			  "0.026, 0.029, 0.033, 0.040, 0.056, 0.071, 0.083", \
			  "0.022, 0.026, 0.029, 0.037, 0.052, 0.068, 0.079", \
			  "0.016, 0.019, 0.023, 0.031, 0.046, 0.061, 0.073", \
			  "0.003, 0.006, 0.010, 0.018, 0.033, 0.049, 0.060", \
			  "0.000, 0.000, 0.000, 0.005, 0.021, 0.036, 0.048", \
			  "0.000, 0.000, 0.000, 0.000, 0.011, 0.026, 0.038" \
			)
			}
			fall_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.028, 0.020, 0.009, 0.000, 0.000, 0.000, 0.000", \
			  "0.026, 0.017, 0.007, 0.000, 0.000, 0.000, 0.000", \
			  "0.022, 0.014, 0.004, 0.000, 0.000, 0.000, 0.000", \
			  "0.016, 0.008, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.003, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}
	pin(CENA) {
		direction : input;
		capacitance : 0.005;
		timing() {
			related_pin : "CLKA" ;
			timing_type : setup_rising ;
			rise_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.151, 0.148, 0.144, 0.137, 0.122, 0.106, 0.095", \
			  "0.154, 0.151, 0.147, 0.139, 0.124, 0.109, 0.098", \
			  "0.157, 0.154, 0.150, 0.143, 0.127, 0.112, 0.101", \
			  "0.163, 0.160, 0.156, 0.149, 0.134, 0.119, 0.107", \
			  "0.176, 0.173, 0.169, 0.162, 0.146, 0.131, 0.120", \
			  "0.189, 0.186, 0.182, 0.174, 0.159, 0.144, 0.133", \
			  "0.198, 0.195, 0.192, 0.184, 0.169, 0.154, 0.142" \
			)
			}
			fall_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.171, 0.179, 0.190, 0.210, 0.252, 0.293, 0.325", \
			  "0.173, 0.182, 0.192, 0.213, 0.254, 0.296, 0.327", \
			  "0.177, 0.185, 0.195, 0.216, 0.258, 0.299, 0.330", \
			  "0.183, 0.191, 0.202, 0.222, 0.264, 0.306, 0.337", \
			  "0.196, 0.204, 0.214, 0.235, 0.277, 0.318, 0.349", \
			  "0.208, 0.217, 0.227, 0.248, 0.289, 0.331, 0.362", \
			  "0.218, 0.226, 0.237, 0.257, 0.299, 0.341, 0.372" \
			)
		}	}
		timing() {
			related_pin : "CLKA " ;
			timing_type : hold_rising ;
			rise_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
				
			}
			fall_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}   }
	bus (AA)  {
		bus_type : RF2SH64x16_ADDRESS;
		direction : input;
		capacitance : 0.006;
	        internal_power(){
	    		when : "CENA";
			power(RF2SH64x16_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
	    			values ("0.242, 0.242")
			}	
		}

		timing() {
			related_pin : "CLKA"
			timing_type : setup_rising ;
			rise_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.243, 0.247, 0.253, 0.264, 0.285, 0.307, 0.323", \
			  "0.246, 0.250, 0.255, 0.266, 0.288, 0.309, 0.325", \
			  "0.249, 0.253, 0.259, 0.269, 0.291, 0.312, 0.329", \
			  "0.255, 0.260, 0.265, 0.276, 0.297, 0.319, 0.335", \
			  "0.268, 0.272, 0.278, 0.288, 0.310, 0.332, 0.348", \
			  "0.281, 0.285, 0.290, 0.301, 0.323, 0.344, 0.360", \
			  "0.290, 0.295, 0.300, 0.311, 0.332, 0.354, 0.370" \
			)
			}
			fall_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.237, 0.249, 0.264, 0.294, 0.353, 0.413, 0.457", \
			  "0.240, 0.252, 0.266, 0.296, 0.356, 0.415, 0.460", \
			  "0.243, 0.255, 0.270, 0.299, 0.359, 0.418, 0.463", \
			  "0.249, 0.261, 0.276, 0.306, 0.365, 0.425, 0.469", \
			  "0.262, 0.274, 0.289, 0.318, 0.378, 0.437, 0.482", \
			  "0.275, 0.287, 0.301, 0.331, 0.391, 0.450, 0.495", \
			  "0.284, 0.296, 0.311, 0.341, 0.400, 0.460, 0.504" \
			)
		}	}
		timing() {
			related_pin : "CLKA"
			timing_type : hold_rising ;
			rise_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RF2SH64x16_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.022, 0.010, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.007, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.016, 0.004, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}   }

	pin(CLKB) {
		direction : input;
		capacitance : 0.033
		clock	 : true;
		min_pulse_width_low	 : 0.170;
		min_pulse_width_high	 : 0.043;
		min_period		 : 0.856;
                max_transition           : 0.750;
	        internal_power(){
	    		when : "CENB";
			power(RF2SH64x16_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("0.024, 0.024")
			}
		}
	        internal_power(){
			when : "!CENB";
			rise_power(RF2SH64x16_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("7.678, 7.678")
			}	
			fall_power(RF2SH64x16_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("0.0, 0.0")
			}	
		}	
		timing() {
			related_pin : "CLKA" ;
			timing_type : setup_rising ;
			rise_constraint(scalar) {
				values ("0.410")
			}
		}
	}
   	pin(CLKA) {
		direction : input;
		capacitance : 0.038
		clock	 : true;
		min_pulse_width_low	 : 0.186;
		min_pulse_width_high	 : 0.043;
		min_period		 : 1.026;
                max_transition           : 0.750;
	        internal_power(){
	    		when : "CENA";
			power(RF2SH64x16_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("0.024, 0.024")
			}
		}
	        internal_power(){
	    		when : "!CENA";
			rise_power(RF2SH64x16_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("11.457, 11.457")
			}
			fall_power(RF2SH64x16_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("0.0, 0.0")
			}
		}
		timing() {
			related_pin : "CLKB" ;
			timing_type : setup_rising ;
			rise_constraint(scalar) {
				values ("0.410")
			}
		}	}
	bus(QA) {
                bus_type : RF2SH64x16_DATA;
        	direction : output;
                memory_read() {
			address : AA;
		}
		timing() {
			related_pin :	"CLKA";
			timing_type : rising_edge;
			timing_sense : non_unate;

			cell_rise(RF2SH64x16_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.000, 0.010, 0.030, 0.050, 0.130, 0.250, 0.400");
			values ( \
			  "0.648, 0.657, 0.675, 0.693, 0.731, 0.788, 0.859", \
			  "0.646, 0.655, 0.673, 0.691, 0.729, 0.786, 0.856", \
			  "0.643, 0.652, 0.670, 0.687, 0.726, 0.782, 0.853", \
			  "0.636, 0.645, 0.663, 0.681, 0.719, 0.776, 0.847", \
			  "0.624, 0.633, 0.650, 0.668, 0.707, 0.763, 0.834", \
			  "0.611, 0.620, 0.638, 0.656, 0.694, 0.750, 0.821", \
			  "0.601, 0.610, 0.628, 0.646, 0.684, 0.741, 0.812" \
			)
			}
			rise_transition(RF2SH64x16_load_template) {
			index_1 ("0.000, 0.010, 0.030, 0.050, 0.130, 0.250, 0.400");
			values ("0.050, 0.070, 0.110, 0.149, 0.308, 0.546, 0.843")
			}
			cell_fall(RF2SH64x16_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.000, 0.010, 0.030, 0.050, 0.130, 0.250, 0.400");
			values ( \
			  "0.648, 0.657, 0.675, 0.693, 0.731, 0.788, 0.859", \
			  "0.646, 0.655, 0.673, 0.691, 0.729, 0.786, 0.856", \
			  "0.643, 0.652, 0.670, 0.687, 0.726, 0.782, 0.853", \
			  "0.636, 0.645, 0.663, 0.681, 0.719, 0.776, 0.847", \
			  "0.624, 0.633, 0.650, 0.668, 0.707, 0.763, 0.834", \
			  "0.611, 0.620, 0.638, 0.656, 0.694, 0.750, 0.821", \
			  "0.601, 0.610, 0.628, 0.646, 0.684, 0.741, 0.812" \
			)
			}
			fall_transition(RF2SH64x16_load_template) {
			index_1 ("0.000, 0.010, 0.030, 0.050, 0.130, 0.250, 0.400");
			values ("0.047, 0.056, 0.073, 0.091, 0.162, 0.269, 0.402")
		}	}
	}
	cell_leakage_power : 0.044;
    }
}
