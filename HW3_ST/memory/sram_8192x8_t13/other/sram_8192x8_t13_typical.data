/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2011 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			SRAM-SP-HS-HC SRAM Generator
 *           			TSMC CL013G Process
 *      version:		2004Q2V1
 *      comment:		
 *      configuration:	 -instname "sram_8192x8_t13" -words 8192 -bits 8 -frequency 100 -ring_width 4 -mux 32 -drive 6 -write_mask off -wp_size 8 -redundancy off -redundancy_bits 1 -top_layer met5 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -fuse_encoding encoded -insert_fuse yes -fusebox_name FUSE -rtl_style mux
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  sram_8192x8_t13
 *      Words:          8192
 *      Word Width:     8
 *      Mux:            32
 *      Pipeline:       No
 *      Process:        typical
 *      Delays:		max
 *
 *      Creation Date:  2011-03-15 05:39:36Z
 *      Version:        2004Q2V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "typical";
DESIGN              "sram_8192x8_t13";

CELLDATA
area                   : 280772.766;
default_max_transition : 0.800;
ENDCELLDATA

PORTDATA
Q[7:0] : MAXCAP(0.495);
A[12:0] : CAP(0.021);
CEN : CAP(0.004);
CLK : CAP(0.086), MAXTRANS(0.800);
D[7:0] : CAP(0.001);
WEN : CAP(0.007);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(sram_8192x8_t13_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(sram_8192x8_t13_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(sram_8192x8_t13_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tas:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.317, 0.317, 0.317, 0.316, 0.314, 0.313, 0.311", \
			  "0.318, 0.318, 0.317, 0.316, 0.315, 0.313, 0.312", \
			  "0.319, 0.318, 0.318, 0.317, 0.316, 0.314, 0.313", \
			  "0.320, 0.320, 0.319, 0.319, 0.317, 0.316, 0.314", \
			  "0.323, 0.323, 0.323, 0.322, 0.320, 0.319, 0.317", \
			  "0.326, 0.326, 0.326, 0.325, 0.323, 0.322, 0.320", \
			  "0.329, 0.329, 0.329, 0.328, 0.327, 0.325, 0.324" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.162, 0.165, 0.169, 0.177, 0.193, 0.209, 0.225", \
			  "0.162, 0.166, 0.170, 0.178, 0.193, 0.209, 0.225", \
			  "0.163, 0.166, 0.170, 0.178, 0.194, 0.210, 0.226", \
			  "0.165, 0.168, 0.172, 0.180, 0.196, 0.212, 0.227", \
			  "0.168, 0.171, 0.175, 0.183, 0.199, 0.215, 0.231", \
			  "0.171, 0.174, 0.178, 0.186, 0.202, 0.218, 0.234", \
			  "0.174, 0.177, 0.181, 0.189, 0.205, 0.221, 0.237" \
			)
			}
ENDARCDATA

ARCDATA
tch_tah:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.020, 0.021, 0.021, 0.022, 0.023, 0.025, 0.026", \
			  "0.020, 0.020, 0.020, 0.021, 0.023, 0.024, 0.026", \
			  "0.019, 0.019, 0.020, 0.020, 0.022, 0.023, 0.025", \
			  "0.017, 0.018, 0.018, 0.019, 0.020, 0.022, 0.023", \
			  "0.014, 0.015, 0.015, 0.016, 0.017, 0.019, 0.020", \
			  "0.011, 0.012, 0.012, 0.013, 0.014, 0.016, 0.017", \
			  "0.008, 0.008, 0.009, 0.010, 0.011, 0.013, 0.014" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.013, 0.010, 0.006, 0.000, 0.000, 0.000, 0.000", \
			  "0.013, 0.009, 0.005, 0.000, 0.000, 0.000, 0.000", \
			  "0.012, 0.009, 0.005, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.007, 0.003, 0.000, 0.000, 0.000, 0.000", \
			  "0.007, 0.004, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.004, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcs:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.659, 0.657, 0.654, 0.648, 0.637, 0.626, 0.615", \
			  "0.660, 0.657, 0.654, 0.649, 0.638, 0.627, 0.615", \
			  "0.660, 0.658, 0.655, 0.650, 0.639, 0.627, 0.616", \
			  "0.662, 0.660, 0.657, 0.651, 0.640, 0.629, 0.618", \
			  "0.665, 0.663, 0.660, 0.654, 0.643, 0.632, 0.621", \
			  "0.668, 0.666, 0.663, 0.657, 0.646, 0.635, 0.624", \
			  "0.671, 0.669, 0.666, 0.661, 0.649, 0.638, 0.627" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.656, 0.665, 0.676, 0.698, 0.742, 0.786, 0.830", \
			  "0.657, 0.666, 0.677, 0.699, 0.743, 0.787, 0.831", \
			  "0.658, 0.666, 0.677, 0.699, 0.744, 0.788, 0.832", \
			  "0.659, 0.668, 0.679, 0.701, 0.745, 0.789, 0.833", \
			  "0.662, 0.671, 0.682, 0.704, 0.748, 0.792, 0.836", \
			  "0.665, 0.674, 0.685, 0.707, 0.751, 0.795, 0.840", \
			  "0.668, 0.677, 0.688, 0.710, 0.754, 0.799, 0.843" \
			)
			}
ENDARCDATA

ARCDATA
tch_tch:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tds:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.169, 0.167, 0.163, 0.156, 0.141, 0.126, 0.112", \
			  "0.170, 0.167, 0.163, 0.156, 0.142, 0.127, 0.112", \
			  "0.171, 0.168, 0.164, 0.157, 0.142, 0.128, 0.113", \
			  "0.172, 0.169, 0.166, 0.158, 0.144, 0.129, 0.115", \
			  "0.175, 0.173, 0.169, 0.162, 0.147, 0.132, 0.118", \
			  "0.179, 0.176, 0.172, 0.165, 0.150, 0.135, 0.121", \
			  "0.182, 0.179, 0.175, 0.168, 0.153, 0.139, 0.124" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.004, 0.011, 0.019, 0.036, 0.070, 0.104, 0.137", \
			  "0.005, 0.012, 0.020, 0.037, 0.071, 0.104, 0.138", \
			  "0.006, 0.012, 0.021, 0.038, 0.071, 0.105, 0.139", \
			  "0.007, 0.014, 0.022, 0.039, 0.073, 0.107, 0.140", \
			  "0.010, 0.017, 0.025, 0.042, 0.076, 0.110, 0.143", \
			  "0.013, 0.020, 0.029, 0.045, 0.079, 0.113, 0.146", \
			  "0.017, 0.023, 0.032, 0.049, 0.082, 0.116, 0.149" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdh:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.001, 0.008, 0.023, 0.037, 0.052", \
			  "0.000, 0.000, 0.000, 0.008, 0.022, 0.037, 0.051", \
			  "0.000, 0.000, 0.000, 0.007, 0.021, 0.036, 0.051", \
			  "0.000, 0.000, 0.000, 0.005, 0.020, 0.034, 0.049", \
			  "0.000, 0.000, 0.000, 0.002, 0.017, 0.031, 0.046", \
			  "0.000, 0.000, 0.000, 0.000, 0.014, 0.028, 0.043", \
			  "0.000, 0.000, 0.000, 0.000, 0.011, 0.025, 0.040" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.041, 0.034, 0.026, 0.009, 0.000, 0.000, 0.000", \
			  "0.040, 0.033, 0.025, 0.008, 0.000, 0.000, 0.000", \
			  "0.039, 0.033, 0.024, 0.007, 0.000, 0.000, 0.000", \
			  "0.038, 0.031, 0.023, 0.006, 0.000, 0.000, 0.000", \
			  "0.035, 0.028, 0.019, 0.003, 0.000, 0.000, 0.000", \
			  "0.032, 0.025, 0.016, 0.000, 0.000, 0.000, 0.000", \
			  "0.028, 0.022, 0.013, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA


ARCDATA
tch_tws:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.186, 0.187, 0.187, 0.189, 0.193, 0.196, 0.200", \
			  "0.186, 0.187, 0.188, 0.190, 0.193, 0.197, 0.200", \
			  "0.187, 0.188, 0.189, 0.191, 0.194, 0.198, 0.201", \
			  "0.189, 0.190, 0.190, 0.192, 0.196, 0.199, 0.203", \
			  "0.192, 0.193, 0.193, 0.195, 0.199, 0.202, 0.206", \
			  "0.195, 0.196, 0.197, 0.198, 0.202, 0.205, 0.209", \
			  "0.198, 0.199, 0.200, 0.201, 0.205, 0.209, 0.212" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.056, 0.062, 0.069, 0.082, 0.109, 0.136, 0.164", \
			  "0.057, 0.062, 0.069, 0.083, 0.110, 0.137, 0.164", \
			  "0.058, 0.063, 0.070, 0.084, 0.111, 0.138, 0.165", \
			  "0.059, 0.065, 0.071, 0.085, 0.112, 0.139, 0.167", \
			  "0.062, 0.068, 0.075, 0.088, 0.115, 0.143, 0.170", \
			  "0.065, 0.071, 0.078, 0.091, 0.118, 0.146, 0.173", \
			  "0.069, 0.074, 0.081, 0.094, 0.122, 0.149, 0.176" \
			)
			}
ENDARCDATA

ARCDATA
tch_twh:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
period_tcyc:
			rise_constraint(scalar) {
				values ("1.292")
			}
			fall_constraint(scalar) {
				values ("1.292")
			}
ENDARCDATA

ARCDATA
tpw_tckl:
			rise_constraint(scalar) {
				values ("0.526")
			}
			fall_constraint(scalar) {
				values ("0.526")
			}
ENDARCDATA

ARCDATA
tpw_tckh:
			rise_constraint(scalar) {
				values ("0.083")
			}
			fall_constraint(scalar) {
				values ("0.083")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(sram_8192x8_t13_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ( \
			  "1.263, 1.268, 1.277, 1.291, 1.339, 1.415, 1.498", \
			  "1.262, 1.267, 1.277, 1.291, 1.338, 1.414, 1.498", \
			  "1.261, 1.266, 1.276, 1.290, 1.338, 1.414, 1.497", \
			  "1.260, 1.265, 1.274, 1.288, 1.336, 1.412, 1.495", \
			  "1.257, 1.262, 1.271, 1.285, 1.333, 1.409, 1.492", \
			  "1.254, 1.258, 1.268, 1.282, 1.330, 1.406, 1.489", \
			  "1.251, 1.255, 1.265, 1.279, 1.327, 1.403, 1.486" \
			)
			}
			rise_transition(sram_8192x8_t13_load_template) {
			index_1 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ("0.073, 0.083, 0.102, 0.132, 0.231, 0.389, 0.562")
			}
			cell_fall(sram_8192x8_t13_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.800");
			index_2 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ( \
			  "1.259, 1.261, 1.265, 1.272, 1.294, 1.329, 1.367", \
			  "1.258, 1.260, 1.264, 1.271, 1.293, 1.328, 1.367", \
			  "1.257, 1.259, 1.264, 1.270, 1.292, 1.327, 1.366", \
			  "1.256, 1.258, 1.262, 1.269, 1.291, 1.326, 1.364", \
			  "1.252, 1.255, 1.259, 1.266, 1.288, 1.323, 1.361", \
			  "1.249, 1.252, 1.256, 1.263, 1.285, 1.320, 1.358", \
			  "1.246, 1.248, 1.253, 1.259, 1.281, 1.317, 1.355" \
			)
			}
			fall_transition(sram_8192x8_t13_load_template) {
			index_1 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ("0.048, 0.052, 0.059, 0.069, 0.104, 0.159, 0.219")
			}
ENDARCDATA
ENDTIMINGDATA
ENDMODELDATA
