/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2011 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			SRAM-SP-HS-HC SRAM Generator
 *           			TSMC CL013G Process
 *      version:		2004Q2V1
 *      comment:		
 *      configuration:	 -instname "sram_8192x8_t13" -words 8192 -bits 8 -frequency 100 -ring_width 4 -mux 32 -drive 6 -write_mask off -wp_size 8 -redundancy off -redundancy_bits 1 -top_layer met5 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -fuse_encoding encoded -insert_fuse yes -fusebox_name FUSE -rtl_style mux
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  sram_8192x8_t13
 *      Words:          8192
 *      Word Width:     8
 *      Mux:            32
 *      Pipeline:       No
 *      Process:        slow
 *      Delays:		max
 *
 *      Creation Date:  2011-03-15 05:39:37Z
 *      Version:        2004Q2V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "slow";
DESIGN              "sram_8192x8_t13";

CELLDATA
area                   : 280772.766;
default_max_transition : 1.500;
ENDCELLDATA

PORTDATA
Q[7:0] : MAXCAP(0.495);
A[12:0] : CAP(0.020);
CEN : CAP(0.004);
CLK : CAP(0.083), MAXTRANS(1.500);
D[7:0] : CAP(0.001);
WEN : CAP(0.007);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(sram_8192x8_t13_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(sram_8192x8_t13_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(sram_8192x8_t13_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tas:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.540, 0.541, 0.542, 0.544, 0.552, 0.564, 0.576", \
			  "0.538, 0.539, 0.540, 0.543, 0.550, 0.562, 0.575", \
			  "0.536, 0.537, 0.538, 0.541, 0.548, 0.560, 0.573", \
			  "0.532, 0.533, 0.534, 0.536, 0.544, 0.556, 0.568", \
			  "0.519, 0.520, 0.521, 0.524, 0.531, 0.543, 0.556", \
			  "0.498, 0.499, 0.500, 0.502, 0.510, 0.522, 0.534", \
			  "0.477, 0.478, 0.479, 0.481, 0.489, 0.501, 0.513" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.251, 0.254, 0.257, 0.263, 0.282, 0.312, 0.343", \
			  "0.250, 0.252, 0.255, 0.261, 0.280, 0.311, 0.342", \
			  "0.248, 0.250, 0.253, 0.259, 0.278, 0.309, 0.339", \
			  "0.243, 0.246, 0.249, 0.255, 0.274, 0.304, 0.335", \
			  "0.231, 0.233, 0.236, 0.242, 0.261, 0.292, 0.323", \
			  "0.210, 0.212, 0.215, 0.221, 0.240, 0.271, 0.301", \
			  "0.188, 0.191, 0.194, 0.200, 0.219, 0.250, 0.280" \
			)
			}
ENDARCDATA

ARCDATA
tch_tah:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.029, 0.028, 0.026, 0.024, 0.017, 0.004, 0.000", \
			  "0.030, 0.029, 0.028, 0.026, 0.018, 0.006, 0.000", \
			  "0.032, 0.031, 0.030, 0.028, 0.020, 0.008, 0.000", \
			  "0.037, 0.036, 0.034, 0.032, 0.025, 0.012, 0.000", \
			  "0.049, 0.048, 0.047, 0.045, 0.037, 0.025, 0.013", \
			  "0.070, 0.069, 0.068, 0.066, 0.058, 0.046, 0.034", \
			  "0.092, 0.091, 0.089, 0.087, 0.080, 0.067, 0.055" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.008, 0.005, 0.002, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.007, 0.004, 0.000, 0.000, 0.000, 0.000", \
			  "0.012, 0.009, 0.006, 0.000, 0.000, 0.000, 0.000", \
			  "0.016, 0.014, 0.010, 0.004, 0.000, 0.000, 0.000", \
			  "0.029, 0.026, 0.023, 0.017, 0.000, 0.000, 0.000", \
			  "0.050, 0.047, 0.044, 0.038, 0.020, 0.000, 0.000", \
			  "0.071, 0.068, 0.065, 0.059, 0.041, 0.010, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcs:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "1.143, 1.142, 1.140, 1.136, 1.125, 1.107, 1.088", \
			  "1.142, 1.140, 1.138, 1.135, 1.124, 1.105, 1.087", \
			  "1.140, 1.138, 1.136, 1.132, 1.121, 1.103, 1.084", \
			  "1.135, 1.134, 1.132, 1.128, 1.117, 1.099, 1.080", \
			  "1.123, 1.121, 1.119, 1.116, 1.104, 1.086, 1.068", \
			  "1.101, 1.100, 1.098, 1.094, 1.083, 1.065, 1.046", \
			  "1.080, 1.079, 1.077, 1.073, 1.062, 1.044, 1.025" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "1.164, 1.174, 1.186, 1.211, 1.286, 1.410, 1.534", \
			  "1.162, 1.172, 1.185, 1.210, 1.284, 1.408, 1.533", \
			  "1.160, 1.170, 1.183, 1.207, 1.282, 1.406, 1.531", \
			  "1.156, 1.166, 1.178, 1.203, 1.278, 1.402, 1.526", \
			  "1.143, 1.153, 1.166, 1.191, 1.265, 1.389, 1.514", \
			  "1.122, 1.132, 1.145, 1.169, 1.244, 1.368, 1.493", \
			  "1.101, 1.111, 1.123, 1.148, 1.223, 1.347, 1.472" \
			)
			}
ENDARCDATA

ARCDATA
tch_tch:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tds:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.307, 0.304, 0.301, 0.295, 0.277, 0.247, 0.216", \
			  "0.305, 0.303, 0.299, 0.293, 0.275, 0.245, 0.215", \
			  "0.303, 0.300, 0.297, 0.291, 0.273, 0.243, 0.213", \
			  "0.299, 0.296, 0.293, 0.287, 0.269, 0.239, 0.208", \
			  "0.286, 0.284, 0.280, 0.274, 0.256, 0.226, 0.196", \
			  "0.265, 0.262, 0.259, 0.253, 0.235, 0.205, 0.175", \
			  "0.244, 0.241, 0.238, 0.232, 0.214, 0.184, 0.153" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.046, 0.053, 0.062, 0.079, 0.132, 0.220, 0.309", \
			  "0.044, 0.051, 0.060, 0.078, 0.130, 0.219, 0.307", \
			  "0.042, 0.049, 0.058, 0.075, 0.128, 0.217, 0.305", \
			  "0.038, 0.045, 0.054, 0.071, 0.124, 0.212, 0.301", \
			  "0.025, 0.032, 0.041, 0.058, 0.111, 0.200, 0.288", \
			  "0.004, 0.011, 0.020, 0.037, 0.090, 0.179, 0.267", \
			  "-0.017, -0.010, -0.001, 0.016, 0.069, 0.157, 0.246" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdh:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.013, 0.043, 0.073", \
			  "0.000, 0.000, 0.000, 0.000, 0.014, 0.045, 0.075", \
			  "0.000, 0.000, 0.000, 0.000, 0.017, 0.047, 0.077", \
			  "0.000, 0.000, 0.000, 0.003, 0.021, 0.051, 0.081", \
			  "0.004, 0.006, 0.009, 0.015, 0.033, 0.064, 0.094", \
			  "0.025, 0.027, 0.030, 0.036, 0.055, 0.085, 0.115", \
			  "0.046, 0.049, 0.052, 0.058, 0.076, 0.106, 0.136" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.035, 0.028, 0.019, 0.002, 0.000, 0.000, 0.000", \
			  "0.037, 0.030, 0.021, 0.003, 0.000, 0.000, 0.000", \
			  "0.039, 0.032, 0.023, 0.005, 0.000, 0.000, 0.000", \
			  "0.043, 0.036, 0.027, 0.010, 0.000, 0.000, 0.000", \
			  "0.056, 0.049, 0.040, 0.022, 0.000, 0.000, 0.000", \
			  "0.077, 0.070, 0.061, 0.043, 0.000, 0.000, 0.000", \
			  "0.098, 0.091, 0.082, 0.065, 0.012, 0.000, 0.000" \
			)
			}
ENDARCDATA


ARCDATA
tch_tws:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.297, 0.299, 0.302, 0.307, 0.323, 0.350, 0.377", \
			  "0.295, 0.297, 0.300, 0.305, 0.321, 0.348, 0.375", \
			  "0.293, 0.295, 0.298, 0.303, 0.319, 0.346, 0.373", \
			  "0.289, 0.291, 0.294, 0.299, 0.315, 0.342, 0.369", \
			  "0.276, 0.278, 0.281, 0.286, 0.302, 0.329, 0.356", \
			  "0.255, 0.257, 0.260, 0.265, 0.281, 0.308, 0.335", \
			  "0.234, 0.236, 0.239, 0.244, 0.260, 0.287, 0.314" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.078, 0.084, 0.090, 0.104, 0.145, 0.213, 0.282", \
			  "0.077, 0.082, 0.089, 0.102, 0.143, 0.212, 0.280", \
			  "0.074, 0.080, 0.087, 0.100, 0.141, 0.210, 0.278", \
			  "0.070, 0.076, 0.082, 0.096, 0.137, 0.205, 0.274", \
			  "0.057, 0.063, 0.070, 0.083, 0.124, 0.193, 0.261", \
			  "0.036, 0.042, 0.049, 0.062, 0.103, 0.172, 0.240", \
			  "0.015, 0.021, 0.028, 0.041, 0.082, 0.150, 0.219" \
			)
			}
ENDARCDATA

ARCDATA
tch_twh:
			rise_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(sram_8192x8_t13_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.009, 0.003, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
period_tcyc:
			rise_constraint(scalar) {
				values ("2.179")
			}
			fall_constraint(scalar) {
				values ("2.179")
			}
ENDARCDATA

ARCDATA
tpw_tckl:
			rise_constraint(scalar) {
				values ("0.886")
			}
			fall_constraint(scalar) {
				values ("0.886")
			}
ENDARCDATA

ARCDATA
tpw_tckh:
			rise_constraint(scalar) {
				values ("0.139")
			}
			fall_constraint(scalar) {
				values ("0.139")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(sram_8192x8_t13_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ( \
			  "2.125, 2.132, 2.146, 2.167, 2.236, 2.348, 2.469", \
			  "2.127, 2.134, 2.148, 2.168, 2.238, 2.349, 2.471", \
			  "2.129, 2.136, 2.150, 2.171, 2.240, 2.351, 2.473", \
			  "2.133, 2.140, 2.154, 2.175, 2.244, 2.356, 2.477", \
			  "2.146, 2.153, 2.167, 2.187, 2.257, 2.368, 2.490", \
			  "2.167, 2.174, 2.188, 2.209, 2.278, 2.390, 2.511", \
			  "2.188, 2.195, 2.209, 2.230, 2.299, 2.411, 2.532" \
			)
			}
			rise_transition(sram_8192x8_t13_load_template) {
			index_1 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ("0.095, 0.111, 0.142, 0.188, 0.343, 0.591, 0.862")
			}
			cell_fall(sram_8192x8_t13_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ( \
			  "2.110, 2.114, 2.120, 2.131, 2.165, 2.219, 2.278", \
			  "2.112, 2.115, 2.122, 2.132, 2.166, 2.221, 2.280", \
			  "2.114, 2.117, 2.124, 2.134, 2.168, 2.223, 2.282", \
			  "2.118, 2.122, 2.128, 2.139, 2.173, 2.227, 2.286", \
			  "2.131, 2.134, 2.141, 2.151, 2.185, 2.240, 2.299", \
			  "2.152, 2.156, 2.162, 2.172, 2.206, 2.261, 2.320", \
			  "2.173, 2.177, 2.183, 2.194, 2.228, 2.282, 2.341" \
			)
			}
			fall_transition(sram_8192x8_t13_load_template) {
			index_1 ("0.000, 0.010, 0.030, 0.060, 0.160, 0.320, 0.495");
			values ("0.140, 0.146, 0.157, 0.173, 0.228, 0.315, 0.411")
			}
ENDARCDATA
ENDTIMINGDATA
ENDMODELDATA
